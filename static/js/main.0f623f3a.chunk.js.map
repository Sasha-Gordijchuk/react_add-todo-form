{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todoItem","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todo","App","useState","setTitle","titleError","setTitleError","setUserId","userIdError","setUserIdError","action","method","onSubmit","event","preventDefault","maxId","Math","max","trim","newTodo","push","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f623f3a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todoItem: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todoItem }) => {\n  const {\n    title,\n    completed,\n    user,\n  } = todoItem;\n\n  return (\n    <article\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n      data-id={todoItem.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {\n      todos.map((todoItem) => (\n        <TodoInfo todoItem={todoItem} key={todoItem.id} />\n      ))\n    }\n  </section>\n);\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitleError(false);\n\n    setTitle(value);\n  };\n\n  const handleUserChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserIdError(false);\n\n    setUserId(+value);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const maxId = Math.max(0, ...todos.map(({ id }) => id));\n\n    if (title.trim() === '' || userId === 0) {\n      setTitleError(title.trim() === '');\n      setUserIdError(userId === 0);\n\n      return;\n    }\n\n    const newTodo = {\n      id: maxId + 1,\n      userId,\n      title,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    todos.push(newTodo);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            {'Title: '}\n            <input\n              id=\"titleInput\"\n              name=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              id=\"userSelect\"\n              value={userId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userIdError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}